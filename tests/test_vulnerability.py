#!/usr/bin/env python3
"""
Unit tests for vulnerability scanner module
"""

import unittest
from unittest.mock import patch, MagicMock
from core.vulnerability_scanner import VulnerabilityScanner

class TestVulnerabilityScanner(unittest.TestCase):
    """Test cases for vulnerability scanner"""
    
    def setUp(self):
        """Set up test fixtures"""
        self.scanner = VulnerabilityScanner()
    
    def test_initialization(self):
        """Test vulnerability scanner initialization"""
        self.assertIsNotNone(self.scanner)
    
    def test_cve_lookup(self):
        """Test CVE lookup functionality"""
        # Test with a known CVE
        result = self.scanner.lookup_cve("CVE-2021-44228")
        self.assertIsInstance(result, dict)
    
    def test_vulnerability_scan(self):
        """Test vulnerability scanning"""
        target = "127.0.0.1"
        result = self.scanner.scan_vulnerabilities(target)
        self.assertIsInstance(result, dict)
        self.assertIn("target", result)
        self.assertIn("vulnerabilities", result)
    
    def test_risk_assessment(self):
        """Test risk assessment"""
        vulnerabilities = [
            {"severity": "high", "cvss": 9.0},
            {"severity": "medium", "cvss": 6.5},
            {"severity": "low", "cvss": 3.0}
        ]
        
        risk = self.scanner.assess_risk(vulnerabilities)
        self.assertIsInstance(risk, dict)
        self.assertIn("overall_risk", risk)

if __name__ == '__main__':
    unittest.main()
